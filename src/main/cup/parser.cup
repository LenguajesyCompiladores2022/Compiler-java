package lyc.compiler;

import java_cup.runtime.*;

class Parser;


// Terminals
terminal NUMERAL;
terminal INCLUDE;
terminal PUNTO;
terminal INTEGER;
terminal FLOAT;
terminal CHAR;
terminal MAIN;
terminal ELSE;
terminal CORCH_ABRE;
terminal CORCH_CIERRA;
terminal ASIGNACION;
terminal PUNTO_COMA;
terminal SYS_OUT;
terminal SYS_IN;
terminal AND;
terminal OR;
terminal POINTER;
terminal BARRA;
terminal ASTERISCO;
terminal SALTO_LINEA;
terminal COMENTARIO_MULTI;
terminal COMENTARIO_SINGLE;

terminal CTE;
terminal ID;
terminal OP_SUM;
terminal OP_MUL;
terminal OP_RES;
terminal OP_DIV;
terminal PA;
terminal PC;
terminal IF;
terminal WHILE;
terminal COMA;
terminal TEXTO;
terminal DISTINTO;
terminal IGUAL_IGUAL;
terminal MENOR_IGUAL;
terminal MAYOR_IGUAL;
terminal MENOR;
terminal MAYOR;
terminal PARENTESIS_ABRE;
terminal PARENTESIS_CIERRA;
terminal CTE_REAL;

// Non Terminals
non terminal sentencia;
non terminal asignacion;
non terminal expresion;
non terminal tipoDato;
non terminal termino;
non terminal factor;
non terminal bloque;
non terminal programa;
// Start Symbol Definition
start with programa;

programa	::= bloque {: System.out.println("REGLA 0 -- Programa"); :};
bloque		::= bloque sentencia {: System.out.println("REGLA 1 -- bloque"); :};
bloque		::= sentencia {: System.out.println("REGLA 2 -- bloque"); :};
sentencia	::= asignacion {: System.out.println("REGLA 3 -- sentencia"); :};
asignacion	::= tipoDato ID ASIGNACION expresion PUNTO_COMA {: System.out.println("REGLA 4 -- Asignación"); :};
asignacion	::= ID ASIGNACION expresion PUNTO_COMA {: System.out.println("REGLA 5 -- Asignación"); :};
tipoDato	::= INTEGER: entero {: System.out.println("REGLA 5 -- Integer: " + entero); :};
tipoDato	::= FLOAT: decimal {: System.out.println("REGLA 6 -- Float: " + decimal); :};
tipoDato	::= CHAR: caracter {: System.out.println("REGLA 7 -- Char: " + caracter); :};
expresion	::= expresion OP_SUM termino {: System.out.println("REGLA 8 -- +"); :};
expresion	::= expresion OP_RES termino {: System.out.println("REGLA 9 -- -"); :};
expresion	::= termino {: System.out.println("REGLA 10 -- Expresion = Termino"); :};
termino		::= termino OP_MUL factor {: System.out.println("REGLA 11 -- *"); :};
termino		::= termino OP_DIV factor {: System.out.println("REGLA 12 -- /"); :};
termino		::= factor {: System.out.println("REGLA 13 -- Termino = factor"); :};
factor		::= ID:id  {: System.out.println("REGLA 14 -- Id: " + id); :};
factor		::= CTE:constant {: System.out.println("REGLA 15 -- Constant: " + constant ); :};
factor		::= TEXTO:string {: System.out.println("REGLA 16 -- Constant: " + string.toString().length() ); :};
factor		::= PA expresion PC {: System.out.println("REGLA 17 -- Factor = (Expression)"); :};